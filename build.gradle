buildscript {
  repositories {
    maven {
      url "https://oss.sonatype.org"
    }
    mavenCentral()
  }
}

plugins {
  id 'java'
  id 'idea'
  id 'eclipse'
  id 'project-report'
  id 'com.diffplug.spotless' version '6.21.0'
  id 'org.wiremock.tools.gradle.wiremock-extension-convention' version '0.1.2'
}

repositories {
  mavenLocal()
  mavenCentral()
}

shadowJar {
  archiveBaseName.set('wiremock-faker-extension')
  archiveVersion.set('2.0')
  archiveClassifier.set('')
}

projects {
  ext {
    versions = [
      wiremock: "3.3.1"
    ]
  }
}

allprojects {
  apply plugin: 'com.diffplug.spotless'
  spotless {
    java {
      target 'src/**/*.java'
      googleJavaFormat('1.17.0')
      ratchetFrom 'origin/main'
      trimTrailingWhitespace()
      endWithNewline()
      targetExclude '**/Tmp*.java'
    }
    groovyGradle {
      target '**/*.gradle'
      greclipse()
      indentWithSpaces(2)
      trimTrailingWhitespace()
      endWithNewline()
    }
    json {
      target 'src/**/*.json'
      targetExclude '**/tmp*.json', 'src/test/resources/sample.json', 'src/main/resources/swagger/*.json', 'src/test/resources/filesource/subdir/deepfile.json', 'src/test/resources/schema-validation/*.json'
      simple().indentWithSpaces(2)
    }
  }
}

dependencies {
  api "org.wiremock:wiremock:$versions.wiremock"
  implementation 'net.datafaker:datafaker:1.7.0'
  implementation 'com.github.jknack:handlebars:4.2.0'


  testImplementation("org.wiremock:wiremock:$versions.wiremock") {
    artifact {
      classifier = 'tests'
    }
  }
}

shadowJar {
  relocate "com.github.jknack", 'wiremock.com.github.jknack'
  relocate "net.datafaker", 'wiremock.net.datafaker'
}

test {
  useJUnitPlatform()
  testLogging {
    events "PASSED", "FAILED", "SKIPPED"
    exceptionFormat "full"
  }
}
